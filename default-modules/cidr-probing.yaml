name: cidr-probing
desc: Running HTTP fingerprint technology and response with the supplied inputs
validator: cidr-file

report:
  final:
    - "{{Output}}/portscan/beautify-{{Workspace}}-http.txt"
    - "{{Output}}/portscan/raw-open-ports.txt"

params:
  - inputFile: "{{Target}}"
  - httpFile: "{{Output}}/portscan/http-{{Workspace}}.txt"
  - enableSreenshot: 'false'
  - httpTimeout: '10'
  - ports: "3000,3128,3333,4243,443,4567,4711,4712,4993,5000,5104,5108,5800,591,593,6443,6543,7000,7396,7474,7779,80,8000,8001,8008,8014,8042,8069,8080,8081,8088,8090,8091,81,8118,8123,8172,8222,8243,8280,8281,832,8333,8443,8500,8834,8880,8888,8983,9000,9043,9060,9080,9090,9091,9200,9443,9800,981,9981,11443,7443,3001,8009"
  - httpThreads: '{{ threads * 8 }}'
  - rateRustScan: "{{ threads * 500}}"
  
pre_run:
  - CreateFolder("{{Output}}/portscan")

steps:

  # do port scan first
  - required:
      - '{{Binaries}}/metabigor'
    commands:
      - "cat {{inputFile}} | {{Binaries}}/metabigor scan --rate {{rateRustScan}} -p {{ports}} --pipe >> {{Output}}/portscan/raw-open-ports.txt"
    scripts:
      - CleanRustScan("{{Output}}/portscan/raw-open-ports.txt", "{{Output}}/portscan/open-ports.txt")

  - commands:
      - "cat {{Output}}/portscan/open-ports.txt | {{Binaries}}/httpx -nf -timeout {{httpTimeout}} -silent -t {{httpThreads}} >> {{httpFile}}"
    scripts:
      - SortU("{{httpFile}}")

  - required:
      - "{{Binaries}}/httpx"
      - "{{httpFile}}"
    commands:
      - cat {{httpFile}} | {{Binaries}}/httpx -nf -timeout {{httpTimeout}} -t {{httpThreads}} -no-color -json -title -tech-detect -status-code -silent >> {{Output}}/portscan/{{Workspace}}-http-overview.txt
    scripts:
      - CleanJSONHttpx('{{Output}}/portscan/{{Workspace}}-http-overview.txt', '{{Output}}/portscan/{{Workspace}}-raw-overview.txt')
      - ExecCmd("cat {{Output}}/portscan/{{Workspace}}-raw-overview.txt | csvtk pretty --no-header-row -I -s ' | ' -W 75 > {{Output}}/portscan/beautify-{{Workspace}}-http.txt")
      - Cat('{{Output}}/portscan/beautify-{{Workspace}}-http.txt')

  - scripts:
      - GenMarkdownReport("{{Data}}/markdown/simple-template.md", "{{Output}}/summary.html")

